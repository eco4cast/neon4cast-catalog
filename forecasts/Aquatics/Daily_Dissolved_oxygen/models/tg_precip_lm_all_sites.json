{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "tg_precip_lm_all_sites_oxygen_P1D_forecast",
  "bbox": [-149.6106, 18.1135, -66.7987, 68.6698],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-87.4077, 32.9604],
      [-110.5871, 44.9501],
      [-102.4471, 39.7582],
      [-119.2575, 37.0597],
      [-84.2793, 35.9574],
      [-84.4374, 31.1854],
      [-83.5038, 35.6904],
      [-122.1655, 44.2596],
      [-72.3295, 42.4719],
      [-82.0084, 29.676],
      [-66.9868, 18.1135],
      [-149.143, 68.6698],
      [-105.9154, 39.8914],
      [-96.6038, 39.1051],
      [-111.7979, 40.7839],
      [-89.4737, 46.2097],
      [-78.1473, 38.8943],
      [-121.9338, 45.7908],
      [-82.0177, 29.6878],
      [-97.7823, 33.3785],
      [-96.443, 38.9459],
      [-96.6242, 34.4442],
      [-77.9832, 39.0956],
      [-99.2531, 47.1298],
      [-149.6106, 68.6307],
      [-99.1139, 47.1591],
      [-89.7048, 45.9983],
      [-66.7987, 18.1741],
      [-119.0274, 36.9559],
      [-111.5081, 33.751],
      [-87.7982, 32.5415],
      [-147.504, 65.1532],
      [-88.1589, 31.8534],
      [-105.5442, 40.035]
    ]
  },
  "properties": {
    "title": "tg_precip_lm_all_sites",
    "description": "All forecasts for the Daily_Dissolved_oxygen variable for the tg_precip_lm_all_sites model. Information for the model is provided as follows: The tg_precip_lm_all_sites model is a linear model fit using the function lm() in R. This is a very\nsimple model with only one covariate: total precipitation. y. This model was used to forecast water temperature and dissolved oxygen\nconcentration at the seven lake sites, with the model fitted for all sites together..\n                                    The model predicts this variable at the following sites: MAYF, BLDE, ARIK, BIGC, WALK, FLNT, LECO, MCRA, HOPB, BARC, CUPE, OKSR, WLOU, KING, REDB, CRAM, POSE, MART, SUGG, PRIN, MCDI, BLUE, LEWI, PRPO, TOOK, PRLA, LIRO, GUIL, TECR, SYCA, BLWA, CARI, TOMB, COMO.\n                                    Forecasts are the raw forecasts that includes all ensemble members or distribution parameters. Due to the size of the raw forecasts, we recommend accessing the forecast summaries or scores to analyze forecasts (unless you need the individual ensemble members)",
    "datetime": "2024-08-16T00:00:00Z",
    "updated": "2024-08-23T00:00:00Z",
    "start_datetime": "2023-01-01T00:00:00Z",
    "end_datetime": "2024-09-19T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts",
        "name": "Abigail Lewis",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://ecoforecast.org/",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Forecasts",
      "neon4cast",
      "Aquatics",
      "tg_precip_lm_all_sites",
      "Dissolved_oxygen",
      "oxygen",
      "Daily",
      "P1D",
      "MAYF",
      "BLDE",
      "ARIK",
      "BIGC",
      "WALK",
      "FLNT",
      "LECO",
      "MCRA",
      "HOPB",
      "BARC",
      "CUPE",
      "OKSR",
      "WLOU",
      "KING",
      "REDB",
      "CRAM",
      "POSE",
      "MART",
      "SUGG",
      "PRIN",
      "MCDI",
      "BLUE",
      "LEWI",
      "PRPO",
      "TOOK",
      "PRLA",
      "LIRO",
      "GUIL",
      "TECR",
      "SYCA",
      "BLWA",
      "CARI",
      "TOMB",
      "COMO"
    ],
    "table:columns": [
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "parameter",
        "type": "string",
        "description": "ensemble member or distribution parameter"
      },
      {
        "name": "prediction",
        "type": "double",
        "description": "predicted value for variable"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      },
      {
        "name": "model_id",
        "type": "string",
        "description": "unique model identifier"
      }
    ]
  },
  "collection": "forecasts",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_precip_lm_all_sites"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_precip_lm_all_sites"
    },
    {
      "rel": "self",
      "href": "tg_precip_lm_all_sites.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/forecasts/Aquatics/Daily_Dissolved_oxygen/models/tg_precip_lm_all_sites.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/forecasts/Aquatics/Daily_Dissolved_oxygen/models/tg_precip_lm_all_sites.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_precip_lm_all_sites.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_precip_lm_all_sites.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/neon4cast_field_site_metadata.csv",
      "description": "MAYF, BLDE, ARIK, BIGC, WALK, FLNT, LECO, MCRA, HOPB, BARC, CUPE, OKSR, WLOU, KING, REDB, CRAM, POSE, MART, SUGG, PRIN, MCDI, BLUE, LEWI, PRPO, TOOK, PRLA, LIRO, GUIL, TECR, SYCA, BLWA, CARI, TOMB, COMO"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Dissolved_oxygen",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=tg_precip_lm_all_sites?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=tg_precip_lm_all_sites?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=tg_precip_lm_all_sites\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
