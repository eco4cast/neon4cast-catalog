{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "tg_lasso_chla_P1D_forecast",
  "bbox": [-149.6106, 29.676, -82.0084, 68.6307],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-99.1139, 47.1591],
      [-87.7982, 32.5415],
      [-88.1589, 31.8534],
      [-89.7048, 45.9983],
      [-149.6106, 68.6307],
      [-99.2531, 47.1298],
      [-84.4374, 31.1854],
      [-82.0177, 29.6878],
      [-89.4737, 46.2097],
      [-82.0084, 29.676]
    ]
  },
  "properties": {
    "title": "tg_lasso",
    "description": "All forecasts for the Daily_Chlorophyll_a variable for the tg_lasso model. Information for the model is provided as follows: Lasso is a machine learning model implemented in the same workflow as tg_randfor, but with\ndifferent hyperparameter tuning. The model drivers are unlagged air temperature, air pressure, relative\nhumidity, surface downwelling longwave and shortwave radiation, precipitation, and northward and\neastward wind. Lasso regressions were fitted with the function glmnet() in\nthe package glmnet (Tay et al. 2023), where the regularization hyperparameter (lambda) is tuned and\nselected with 10-fold cross validation..\n                                    The model predicts this variable at the following sites: PRLA, BLWA, TOMB, LIRO, TOOK, PRPO, FLNT, SUGG, CRAM, BARC.\n                                    Forecasts are the raw forecasts that includes all ensemble members or distribution parameters. Due to the size of the raw forecasts, we recommend accessing the forecast summaries or scores to analyze forecasts (unless you need the individual ensemble members)",
    "datetime": "2025-07-11T00:00:00Z",
    "updated": "2025-07-11T00:00:00Z",
    "start_datetime": "2023-01-01T00:00:00Z",
    "end_datetime": "2025-08-14T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
        "name": "Caleb Robbins",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://ecoforecast.org/",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Forecasts",
      "neon4cast",
      "Aquatics",
      "tg_lasso",
      "Chlorophyll_a",
      "chla",
      "Daily",
      "P1D",
      "PRLA",
      "BLWA",
      "TOMB",
      "LIRO",
      "TOOK",
      "PRPO",
      "FLNT",
      "SUGG",
      "CRAM",
      "BARC"
    ],
    "table:columns": [
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "parameter",
        "type": "string",
        "description": "ensemble member or distribution parameter"
      },
      {
        "name": "prediction",
        "type": "double",
        "description": "predicted value for variable"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      },
      {
        "name": "model_id",
        "type": "string",
        "description": "unique model identifier"
      }
    ]
  },
  "collection": "forecasts",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_lasso"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_lasso"
    },
    {
      "rel": "self",
      "href": "tg_lasso.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/forecasts/Aquatics/Daily_Chlorophyll_a/models/tg_lasso.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/forecasts/Aquatics/Daily_Chlorophyll_a/models/tg_lasso.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_lasso.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_lasso.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/neon4cast_field_site_metadata.csv",
      "description": "PRLA, BLWA, TOMB, LIRO, TOOK, PRPO, FLNT, SUGG, CRAM, BARC"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Chlorophyll_a",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=chla/model_id=tg_lasso?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=chla/model_id=tg_lasso?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=chla/model_id=tg_lasso\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
