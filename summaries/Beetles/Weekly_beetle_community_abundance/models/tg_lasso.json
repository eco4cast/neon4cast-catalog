{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "tg_lasso_abundance_P1W_summaries",
  "bbox": [-155.3173, 17.9696, -66.8687, 65.154],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-89.5857, 45.4937],
      [-71.2874, 44.0639],
      [-105.546, 40.2759],
      [-106.8425, 32.5907],
      [-76.56, 38.8901],
      [-119.7323, 37.1088],
      [-89.5864, 45.5089],
      [-87.3933, 32.9505],
      [-99.2413, 47.1282],
      [-149.2133, 63.8758],
      [-84.2826, 35.9641],
      [-147.5026, 65.154],
      [-66.8687, 17.9696],
      [-145.7514, 63.8811],
      [-96.6129, 39.1104],
      [-81.9934, 29.6893],
      [-81.4362, 28.1251],
      [-95.1921, 39.0404],
      [-89.5373, 46.2339],
      [-119.006, 37.0058],
      [-99.1066, 47.1617],
      [-110.5391, 44.9535],
      [-121.9519, 45.8205],
      [-97.57, 33.4012],
      [-100.9154, 46.7697],
      [-72.1727, 42.5369],
      [-112.4524, 40.1776],
      [-119.2622, 37.0334],
      [-110.8355, 31.9107],
      [-84.4686, 31.1948],
      [-103.0293, 40.4619],
      [-99.0588, 35.4106],
      [-78.1395, 38.8929],
      [-104.7456, 40.8155],
      [-78.0418, 39.0337],
      [-80.5248, 37.3783],
      [-83.5019, 35.689],
      [-67.0769, 18.0213],
      [-155.3173, 19.5531],
      [-109.3883, 38.2483],
      [-105.5824, 40.0543],
      [-96.5631, 39.1008],
      [-88.1612, 31.8539],
      [-122.3303, 45.7624],
      [-87.8039, 32.5417]
    ]
  },
  "properties": {
    "title": "tg_lasso",
    "description": "All summaries for the Weekly_beetle_community_abundance variable for the tg_lasso model. Information for the model is provided as follows: Lasso is a machine learning model implemented in the same workflow as tg_randfor, but with\ndifferent hyperparameter tuning. The model drivers are unlagged air temperature, air pressure, relative\nhumidity, surface downwelling longwave and shortwave radiation, precipitation, and northward and\neastward wind. Lasso regressions were fitted with the function glmnet() in\nthe package glmnet (Tay et al. 2023), where the regularization hyperparameter (lambda) is tuned and\nselected with 10-fold cross validation..\n                                    The model predicts this variable at the following sites: TREE, BART, RMNP, JORN, SERC, SJER, STEI, TALL, WOOD, HEAL, ORNL, BONA, GUAN, DEJU, KONA, OSBS, DSNY, UKFS, UNDE, TEAK, DCFS, YELL, WREF, CLBJ, NOGP, HARV, ONAQ, SOAP, SRER, JERC, STER, OAES, SCBI, CPER, BLAN, MLBS, GRSM, LAJA, PUUM, MOAB, NIWO, KONZ, LENO, ABBY, DELA.\n                                    Summaries are the forecasts statistics of the raw forecasts (i.e., mean, median, confidence intervals)",
    "datetime": "2025-07-06T00:00:00Z",
    "updated": "2025-07-06T00:00:00Z",
    "start_datetime": "2022-12-26T00:00:00Z",
    "end_datetime": "2025-08-04T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
        "name": "Caleb Robbins",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://ecoforecast.org/",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Summaries",
      "neon4cast",
      "Beetles",
      "tg_lasso",
      "beetle_community_abundance",
      "abundance",
      "Weekly",
      "P1W",
      "TREE",
      "BART",
      "RMNP",
      "JORN",
      "SERC",
      "SJER",
      "STEI",
      "TALL",
      "WOOD",
      "HEAL",
      "ORNL",
      "BONA",
      "GUAN",
      "DEJU",
      "KONA",
      "OSBS",
      "DSNY",
      "UKFS",
      "UNDE",
      "TEAK",
      "DCFS",
      "YELL",
      "WREF",
      "CLBJ",
      "NOGP",
      "HARV",
      "ONAQ",
      "SOAP",
      "SRER",
      "JERC",
      "STER",
      "OAES",
      "SCBI",
      "CPER",
      "BLAN",
      "MLBS",
      "GRSM",
      "LAJA",
      "PUUM",
      "MOAB",
      "NIWO",
      "KONZ",
      "LENO",
      "ABBY",
      "DELA"
    ],
    "table:columns": [
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "mean",
        "type": "double",
        "description": "mean forecast prediction"
      },
      {
        "name": "median",
        "type": "double",
        "description": "median forecast prediction"
      },
      {
        "name": "sd",
        "type": "double",
        "description": "standard deviation forecasts"
      },
      {
        "name": "quantile97.5",
        "type": "double",
        "description": "upper 97.5 percentile value of forecast"
      },
      {
        "name": "quantile02.5",
        "type": "double",
        "description": "upper 2.5 percentile value of forecast"
      },
      {
        "name": "quantile90",
        "type": "double",
        "description": "upper 90 percentile value of forecast"
      },
      {
        "name": "quantile10",
        "type": "double",
        "description": "upper 10 percentile value of forecast"
      },
      {
        "name": "reference_date",
        "type": "date32[day]",
        "description": "date that the forecast was initiated"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      }
    ]
  },
  "collection": "summaries",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_lasso"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_lasso"
    },
    {
      "rel": "self",
      "href": "tg_lasso.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Beetles/Weekly_beetle_community_abundance/models/tg_lasso.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Beetles/Weekly_beetle_community_abundance/models/tg_lasso.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_lasso.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_lasso.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/eco4cast/Forecast_submissions/blob/main/Generate_forecasts/tg_lasso/forecast_model.R",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/neon4cast_field_site_metadata.csv",
      "description": "TREE, BART, RMNP, JORN, SERC, SJER, STEI, TALL, WOOD, HEAL, ORNL, BONA, GUAN, DEJU, KONA, OSBS, DSNY, UKFS, UNDE, TEAK, DCFS, YELL, WREF, CLBJ, NOGP, HARV, ONAQ, SOAP, SRER, JERC, STER, OAES, SCBI, CPER, BLAN, MLBS, GRSM, LAJA, PUUM, MOAB, NIWO, KONZ, LENO, ABBY, DELA"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Weekly beetle_community_abundance",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1W/variable=abundance/model_id=tg_lasso?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1W/variable=abundance/model_id=tg_lasso?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1W/variable=abundance/model_id=tg_lasso\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
