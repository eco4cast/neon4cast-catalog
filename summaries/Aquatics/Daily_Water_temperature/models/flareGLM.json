{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "flareGLM_temperature_P1D_summaries",
  "bbox": [-149.6106, 29.676, -82.0084, 68.6307],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-99.1139, 47.1591],
      [-89.7048, 45.9983],
      [-89.4737, 46.2097],
      [-82.0177, 29.6878],
      [-82.0084, 29.676],
      [-149.6106, 68.6307],
      [-99.2531, 47.1298]
    ]
  },
  "properties": {
    "title": "flareGLM",
    "description": "All summaries for the Daily_Water_temperature variable for the flareGLM model. Information for the model is provided as follows: The FLARE-GLM is a forecasting framework that integrates the General Lake Model\nhydrodynamic process model (GLM; Hipsey et al., 2019) and data assimilation algorithm to generate\nensemble forecasts of lake water temperature..\n                                    The model predicts this variable at the following sites: PRLA, LIRO, CRAM, SUGG, BARC, TOOK, PRPO.\n                                    Summaries are the forecasts statistics of the raw forecasts (i.e., mean, median, confidence intervals)",
    "datetime": "2025-04-23",
    "updated": "2025-04-23",
    "start_datetime": "2022-12-08T00:00:00Z",
    "end_datetime": "2025-05-27T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/FLARE-forecast/NEON-forecast-code/workflows/default",
        "name": "Freya Olsson",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "www.ecoforecast.org",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Summaries",
      "neon4cast",
      "Aquatics",
      "flareGLM",
      "Water_temperature",
      "temperature",
      "Daily",
      "P1D",
      "PRLA",
      "LIRO",
      "CRAM",
      "SUGG",
      "BARC",
      "TOOK",
      "PRPO"
    ],
    "table:columns": [
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "mean",
        "type": "double",
        "description": "mean forecast prediction"
      },
      {
        "name": "median",
        "type": "double",
        "description": "median forecast prediction"
      },
      {
        "name": "sd",
        "type": "double",
        "description": "standard deviation forecasts"
      },
      {
        "name": "quantile97.5",
        "type": "double",
        "description": "upper 97.5 percentile value of forecast"
      },
      {
        "name": "quantile02.5",
        "type": "double",
        "description": "upper 2.5 percentile value of forecast"
      },
      {
        "name": "quantile90",
        "type": "double",
        "description": "upper 90 percentile value of forecast"
      },
      {
        "name": "quantile10",
        "type": "double",
        "description": "upper 10 percentile value of forecast"
      },
      {
        "name": "reference_date",
        "type": "date32[day]",
        "description": "date that the forecast was initiated"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      }
    ]
  },
  "collection": "summaries",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "flareGLM"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "flareGLM"
    },
    {
      "rel": "self",
      "href": "flareGLM.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/FLARE-forecast/NEON-forecast-code/workflows/default",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Aquatics/Daily_Water_temperature/models/flareGLM.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Aquatics/Daily_Water_temperature/models/flareGLM.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/flareGLM.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/flareGLM.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/FLARE-forecast/NEON-forecast-code/workflows/default",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": {},
      "description": "PRLA, LIRO, CRAM, SUGG, BARC, TOOK, PRPO"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Water_temperature",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=temperature/model_id=flareGLM?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=temperature/model_id=flareGLM?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=temperature/model_id=flareGLM\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
