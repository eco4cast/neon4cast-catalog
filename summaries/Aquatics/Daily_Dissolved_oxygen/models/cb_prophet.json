{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "cb_prophet_oxygen_P1D_summaries",
  "bbox": [-147.504, 18.1135, -66.7987, 65.1532],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-111.5081, 33.751],
      [-105.5442, 40.035],
      [-87.7982, 32.5415],
      [-147.504, 65.1532],
      [-119.0274, 36.9559],
      [-89.7048, 45.9983],
      [-66.7987, 18.1741],
      [-88.1589, 31.8534],
      [-99.1139, 47.1591],
      [-77.9832, 39.0956],
      [-96.6242, 34.4442],
      [-99.2531, 47.1298],
      [-122.1655, 44.2596],
      [-87.4077, 32.9604],
      [-84.4374, 31.1854],
      [-110.5871, 44.9501],
      [-83.5038, 35.6904],
      [-84.2793, 35.9574],
      [-119.2575, 37.0597],
      [-102.4471, 39.7582],
      [-96.6038, 39.1051],
      [-82.0177, 29.6878],
      [-82.0084, 29.676],
      [-96.443, 38.9459],
      [-121.9338, 45.7908],
      [-105.9154, 39.8914],
      [-66.9868, 18.1135],
      [-97.7823, 33.3785],
      [-111.7979, 40.7839],
      [-72.3295, 42.4719],
      [-78.1473, 38.8943],
      [-89.4737, 46.2097]
    ]
  },
  "properties": {
    "title": "cb_prophet",
    "description": "All summaries for the Daily_Dissolved_oxygen variable for the cb_prophet model. Information for the model is provided as follows: The Prophet model is an empirical model, specifically a non-linear regression model that includes\nseasonality effects (Taylor & Letham, 2018). The model relies on Bayesian estimation with an additive\nwhite noise error term.\n                                    The model predicts this variable at the following sites: SYCA, COMO, BLWA, CARI, TECR, LIRO, GUIL, TOMB, PRLA, LEWI, BLUE, PRPO, MCRA, MAYF, FLNT, BLDE, LECO, WALK, BIGC, ARIK, KING, SUGG, BARC, MCDI, MART, WLOU, CUPE, PRIN, REDB, HOPB, POSE, CRAM.\n                                    Summaries are the forecasts statistics of the raw forecasts (i.e., mean, median, confidence intervals)",
    "datetime": "2024-02-06T00:00:00Z",
    "updated": "2024-02-07T00:00:00Z",
    "start_datetime": "2022-06-01T00:00:00Z",
    "end_datetime": "2024-03-10T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/cboettig/forecasts-darts-framework",
        "name": "Carl Boettiger",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://ecoforecast.org/",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Summaries",
      "neon4cast",
      "Aquatics",
      "cb_prophet",
      "Dissolved_oxygen",
      "oxygen",
      "Daily",
      "P1D",
      "SYCA",
      "COMO",
      "BLWA",
      "CARI",
      "TECR",
      "LIRO",
      "GUIL",
      "TOMB",
      "PRLA",
      "LEWI",
      "BLUE",
      "PRPO",
      "MCRA",
      "MAYF",
      "FLNT",
      "BLDE",
      "LECO",
      "WALK",
      "BIGC",
      "ARIK",
      "KING",
      "SUGG",
      "BARC",
      "MCDI",
      "MART",
      "WLOU",
      "CUPE",
      "PRIN",
      "REDB",
      "HOPB",
      "POSE",
      "CRAM"
    ],
    "table:columns": [
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "mean",
        "type": "double",
        "description": "mean forecast prediction"
      },
      {
        "name": "median",
        "type": "double",
        "description": "median forecast prediction"
      },
      {
        "name": "sd",
        "type": "double",
        "description": "standard deviation forecasts"
      },
      {
        "name": "quantile97.5",
        "type": "double",
        "description": "upper 97.5 percentile value of forecast"
      },
      {
        "name": "quantile02.5",
        "type": "double",
        "description": "upper 2.5 percentile value of forecast"
      },
      {
        "name": "quantile90",
        "type": "double",
        "description": "upper 90 percentile value of forecast"
      },
      {
        "name": "quantile10",
        "type": "double",
        "description": "upper 10 percentile value of forecast"
      },
      {
        "name": "reference_date",
        "type": "date32[day]",
        "description": "date that the forecast was initiated"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      }
    ]
  },
  "collection": "summaries",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "cb_prophet"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "cb_prophet"
    },
    {
      "rel": "self",
      "href": "cb_prophet.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/cboettig/forecasts-darts-framework",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Aquatics/Daily_Dissolved_oxygen/models/cb_prophet.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Aquatics/Daily_Dissolved_oxygen/models/cb_prophet.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/cb_prophet.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/cb_prophet.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/cboettig/forecasts-darts-framework",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/neon4cast_field_site_metadata.csv",
      "description": "SYCA, COMO, BLWA, CARI, TECR, LIRO, GUIL, TOMB, PRLA, LEWI, BLUE, PRPO, MCRA, MAYF, FLNT, BLDE, LECO, WALK, BIGC, ARIK, KING, SUGG, BARC, MCDI, MART, WLOU, CUPE, PRIN, REDB, HOPB, POSE, CRAM"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Dissolved_oxygen",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=cb_prophet?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=oxygen/model_id=cb_prophet\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
