{
  "stac_version": "1.0.0",
  "stac_extensions": [
    "https://stac-extensions.github.io/table/v1.2.0/schema.json"
  ],
  "type": "Feature",
  "id": "tg_SVM_nee_P1D_summaries",
  "bbox": [-156.6194, 17.9696, -66.8687, 71.2824],
  "geometry": {
    "type": "MultiPoint",
    "coordinates": [
      [-106.8425, 32.5907],
      [-89.5857, 45.4937],
      [-105.546, 40.2759],
      [-71.2874, 44.0639],
      [-76.56, 38.8901],
      [-87.3933, 32.9505],
      [-119.7323, 37.1088],
      [-89.5864, 45.5089],
      [-145.7514, 63.8811],
      [-72.1727, 42.5369],
      [-147.5026, 65.154],
      [-84.2826, 35.9641],
      [-149.2133, 63.8758],
      [-121.9519, 45.8205],
      [-156.6194, 71.2824],
      [-149.3705, 68.6611],
      [-96.6129, 39.1104],
      [-100.9154, 46.7697],
      [-81.4362, 28.1251],
      [-97.57, 33.4012],
      [-99.2413, 47.1282],
      [-119.006, 37.0058],
      [-81.9934, 29.6893],
      [-95.1921, 39.0404],
      [-99.1066, 47.1617],
      [-66.8687, 17.9696],
      [-110.5391, 44.9535],
      [-89.5373, 46.2339],
      [-96.5631, 39.1008],
      [-83.5019, 35.689],
      [-67.0769, 18.0213],
      [-155.3173, 19.5531],
      [-105.5824, 40.0543],
      [-88.1612, 31.8539],
      [-122.3303, 45.7624],
      [-87.8039, 32.5417],
      [-80.5248, 37.3783],
      [-109.3883, 38.2483],
      [-78.1395, 38.8929],
      [-99.0588, 35.4106],
      [-84.4686, 31.1948],
      [-78.0418, 39.0337],
      [-103.0293, 40.4619],
      [-112.4524, 40.1776],
      [-104.7456, 40.8155],
      [-119.2622, 37.0334],
      [-110.8355, 31.9107]
    ]
  },
  "properties": {
    "title": "tg_SVM",
    "description": "All summaries for the Daily_Net_ecosystem_exchange variable for the tg_SVM model. Information for the model is provided as follows: SVM regression forecasts generated with consistent methods across all sites/variables.\n                                    The model predicts this variable at the following sites: JORN, TREE, RMNP, BART, SERC, TALL, SJER, STEI, DEJU, HARV, BONA, ORNL, HEAL, WREF, BARR, TOOL, KONA, NOGP, DSNY, CLBJ, WOOD, TEAK, OSBS, UKFS, DCFS, GUAN, YELL, UNDE, KONZ, GRSM, LAJA, PUUM, NIWO, LENO, ABBY, DELA, MLBS, MOAB, SCBI, OAES, JERC, BLAN, STER, ONAQ, CPER, SOAP, SRER.\n                                    Summaries are the forecasts statistics of the raw forecasts (i.e., mean, median, confidence intervals)",
    "datetime": "2025-07-11T00:00:00Z",
    "updated": "2025-07-11T00:00:00Z",
    "start_datetime": "2025-04-03T00:00:00Z",
    "end_datetime": "2025-08-13T00:00:00Z",
    "providers": [
      {
        "url": "https://github.com/eco4cast/Forecast_submissions/tree/main/Generate_forecasts",
        "name": "Abigail Lewis",
        "roles": [
          "producer",
          "processor",
          "licensor"
        ]
      },
      {
        "url": "https://ecoforecast.org/",
        "name": "Ecological Forecasting Initiative",
        "roles": [
          "host"
        ]
      }
    ],
    "license": "CC0-1.0",
    "keywords": [
      "Summaries",
      "neon4cast",
      "Terrestrial",
      "tg_SVM",
      "Net_ecosystem_exchange",
      "nee",
      "Daily",
      "P1D",
      "JORN",
      "TREE",
      "RMNP",
      "BART",
      "SERC",
      "TALL",
      "SJER",
      "STEI",
      "DEJU",
      "HARV",
      "BONA",
      "ORNL",
      "HEAL",
      "WREF",
      "BARR",
      "TOOL",
      "KONA",
      "NOGP",
      "DSNY",
      "CLBJ",
      "WOOD",
      "TEAK",
      "OSBS",
      "UKFS",
      "DCFS",
      "GUAN",
      "YELL",
      "UNDE",
      "KONZ",
      "GRSM",
      "LAJA",
      "PUUM",
      "NIWO",
      "LENO",
      "ABBY",
      "DELA",
      "MLBS",
      "MOAB",
      "SCBI",
      "OAES",
      "JERC",
      "BLAN",
      "STER",
      "ONAQ",
      "CPER",
      "SOAP",
      "SRER"
    ],
    "table:columns": [
      {
        "name": "reference_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that the forecast was initiated (horizon = 0)"
      },
      {
        "name": "site_id",
        "type": "string",
        "description": "For forecasts that are not on a spatial grid, use of a site dimension that maps to a more detailed geometry (points, polygons, etc.) is allowable. In general this would be documented in the external metadata (e.g., alook-up table that provides lon and lat)"
      },
      {
        "name": "datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime of the forecasted value (ISO 8601)"
      },
      {
        "name": "family",
        "type": "string",
        "description": "For ensembles: “ensemble.” Default value if unspecified for probability distributions: Name of the statistical distribution associated with the reported statistics. The “sample” distribution is synonymous with “ensemble.”For summary statistics: “summary.”"
      },
      {
        "name": "pub_datetime",
        "type": "timestamp[us, tz=UTC]",
        "description": "datetime that forecast was submitted"
      },
      {
        "name": "mean",
        "type": "double",
        "description": "mean forecast prediction"
      },
      {
        "name": "median",
        "type": "double",
        "description": "median forecast prediction"
      },
      {
        "name": "sd",
        "type": "double",
        "description": "standard deviation forecasts"
      },
      {
        "name": "quantile97.5",
        "type": "double",
        "description": "upper 97.5 percentile value of forecast"
      },
      {
        "name": "quantile02.5",
        "type": "double",
        "description": "upper 2.5 percentile value of forecast"
      },
      {
        "name": "quantile90",
        "type": "double",
        "description": "upper 90 percentile value of forecast"
      },
      {
        "name": "quantile10",
        "type": "double",
        "description": "upper 10 percentile value of forecast"
      },
      {
        "name": "reference_date",
        "type": "date32[day]",
        "description": "date that the forecast was initiated"
      },
      {
        "name": "project_id",
        "type": "string",
        "description": "unique identifier for the forecast project"
      },
      {
        "name": "duration",
        "type": "string",
        "description": "temporal duration of forecast (hourly, daily, etc.); follows ISO 8601 duration convention"
      },
      {
        "name": "variable",
        "type": "string",
        "description": "name of forecasted variable"
      }
    ]
  },
  "collection": "summaries",
  "links": [
    {
      "rel": "collection",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_SVM"
    },
    {
      "rel": "root",
      "href": "../../../catalog.json",
      "type": "application/json",
      "title": "Forecast Catalog"
    },
    {
      "rel": "parent",
      "href": "../collection.json",
      "type": "application/json",
      "title": "tg_SVM"
    },
    {
      "rel": "self",
      "href": "tg_SVM.json",
      "type": "application/json",
      "title": "Model Forecast"
    },
    {
      "rel": "item",
      "href": "https://github.com/eco4cast/Forecast_submissions/tree/main/Generate_forecasts",
      "type": "text/html",
      "title": "Link for Model Code"
    },
    {
      "rel": "item",
      "href": "https://radiantearth.github.io/stac-browser/#/external/raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Terrestrial/Daily_Net_ecosystem_exchange/models/tg_SVM.json",
      "type": "text/html",
      "title": "Link for rendered STAC item"
    },
    {
      "rel": "item",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/summaries/Terrestrial/Daily_Net_ecosystem_exchange/models/tg_SVM.json",
      "type": "text/html",
      "title": "Link for raw JSON file"
    }
  ],
  "assets": {
    "1": {
      "type": "application/json",
      "title": "Model Metadata",
      "href": "https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_SVM.json",
      "description": "Use `jsonlite::fromJSON()` to download the model metadata JSON file. This R code will return metadata provided during the model registration.\n      \n\n### R\n\n```{r}\n# Use code below\n\nmodel_metadata <- jsonlite::fromJSON(\"https://sdsc.osn.xsede.org/bio230014-bucket01/challenges/metadata/model_id/tg_SVM.json\")\n\n"
    },
    "2": {
      "type": "text/html",
      "title": "Link for Model Code",
      "href": "https://github.com/eco4cast/Forecast_submissions/tree/main/Generate_forecasts",
      "description": "The link to the model code provided by the model submission team"
    },
    "3": {
      "type": "text/plain",
      "title": "Model Sites",
      "href": "https://raw.githubusercontent.com/eco4cast/neon4cast-ci/main/neon4cast_field_site_metadata.csv",
      "description": "JORN, TREE, RMNP, BART, SERC, TALL, SJER, STEI, DEJU, HARV, BONA, ORNL, HEAL, WREF, BARR, TOOL, KONA, NOGP, DSNY, CLBJ, WOOD, TEAK, OSBS, UKFS, DCFS, GUAN, YELL, UNDE, KONZ, GRSM, LAJA, PUUM, NIWO, LENO, ABBY, DELA, MLBS, MOAB, SCBI, OAES, JERC, BLAN, STER, ONAQ, CPER, SOAP, SRER"
    },
    "4": {
      "type": "application/x-parquet",
      "title": "Database Access for Daily Net_ecosystem_exchange",
      "href": "s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=nee/model_id=tg_SVM?endpoint_override=sdsc.osn.xsede.org",
      "description": "Use `R` or `Python` code for remote access to the database. This code will return results for this variable and model combination.\n\n### R\n\n```{r}\n# Use code below\n\nall_results <- arrow::open_dataset(\"s3://anonymous@bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=nee/model_id=tg_SVM?endpoint_override=sdsc.osn.xsede.org\")\ndf <- all_results |> dplyr::collect()\n\n```\n       \n\nYou can use dplyr operations before calling `dplyr::collect()` to `summarise`, `select` columns, and/or `filter` rows prior to pulling the data into a local `data.frame`. Reducing the data that is pulled locally will speed up the data download speed and reduce your memory usage.\n\n\n### Python\n\n```{python}# Use code below\nimport ibis\ncon = ibis.duckdbf.connect()\ncon.raw_sql(f'''\nCREATE OR REPLACE SECRET secret (\nTYPE S3,\nENDPOINT 'sdsc.osn.xsede.org',\nURL_STYLE 'path'\n\n''');\npath = \"s3://bio230014-bucket01/challenges/forecasts/bundled-summaries/project_id=neon4cast/duration=P1D/variable=nee/model_id=tg_SVM\"\ncon.read_parquet(path + \"/**\")"
    }
  }
}
